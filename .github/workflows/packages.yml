name: Packages

# Builds platform-specific binaries and Python wheels, publishes GitHub releases
# Configuration reference: https://docs.astral.sh/uv/guides/integration/github/

on:
  push:
    branches: [master,dev]
    tags: ["v*"]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            spec: linux.spec
            artifact: linux
            ext: ""
          - os: windows-latest
            spec: windows.spec
            artifact: windows
            ext: ".exe"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.6.12"
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install ci dependencies (linux)
      if: runner.os == 'Linux'
      run: make ci-deps-linux

    - name: Initialize dependencies
      run: make init

    - name: Build wheel (linux)
      if: runner.os == 'Linux'
      run: make wheel

    - name: Create package
      run: make package

    - name: Upload OS artifact
      uses: actions/upload-artifact@v4
      with:
        name: zagruz-${{ matrix.artifact }}
        path: dist/${{ matrix.artifact }}/*${{ matrix.ext }}

    - name: Upload wheel artifact
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: zagruz-wheel
        path: dist/wheel/*.whl

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: zagruz-*
          merge-multiple: true

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "zagruz ${{ github.ref_name }}"
          files: |
            dist/zagruz-linux-*
            dist/zagruz-win-*.exe
            dist/zagruz-*.whl
          generate_release_notes: true
