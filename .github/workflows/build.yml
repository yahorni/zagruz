name: Build packages

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PYTHON_VERSION: "3.12"
  UV_VERSION: "0.6.11"

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            spec: linux.spec
            artifact: linux
            ext: ""
          - os: windows-latest
            spec: windows.spec
            artifact: windows
            ext: ".exe"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install XCB dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxcb-cursor0 \
          libxcb-keysyms1 \
          libxcb-render-util0 \
          libxcb-xkb1 \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-shape0

    - name: Install UV (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Install UV (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: pip install uv==${{ env.UV_VERSION }}
      env:
        UV_VERSION: ${{ env.UV_VERSION }}

    - name: Create virtual environment
      run: uv sync

    - name: Install dependencies
      shell: bash
      run: uv pip install .[package]

    - name: Build package
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          source .venv/bin/activate
        else
          source .venv/Scripts/activate
        fi
        uv run python -m PyInstaller package/${{ matrix.spec }} --noconfirm \
          --workpath build/${{ matrix.artifact }} \
          --distpath dist/${{ matrix.artifact }}
      working-directory: ${{ github.workspace }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zagruz-${{ matrix.artifact }}
        path: dist/${{ matrix.artifact }}/*${{ matrix.ext }}
        compression-level: 0
